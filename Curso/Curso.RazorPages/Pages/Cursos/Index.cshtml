@page
@model Cursos.RazorPages.Pages.Cursos.IndexCursos 
@using Cursos.RazorPages.Pages.Cursos
@{
    ViewData["Title"] = "Lista de Cursos";
}

<h1>Lista de Cursos</h1>

<p>
    <a asp-page="/Cursos/Create">Criar novo Curso</a>
</p>

<form method="get">
    <div class="form-group">
        <label for="filtroNome">Filtrar por Nome:</label>
        <input type="text" id="filtroNome" name="filtroNome" value="@Model.NomeFiltro" />
        <button type="submit" class="btn btn-primary">Filtrar</button>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Descrição</th>
            <th>
                Data de Início
                <a asp-page="/Cursos/Index" asp-route-Ordenacao="asc">(asc)</a>
                <a asp-page="/Cursos/Index" asp-route-Ordenacao="desc">(desc)</a>
            </th>
            <th>Data de Término</th>
        </tr>
    </thead>
    <tbody>
@if (Model.CursosList.Any())
{
    @foreach (var curso in Model.CursosList)
    {
        // Verifique se curso.NomeCurso não é nulo e contém a letra do filtro
        bool cursoContemLetra = !string.IsNullOrEmpty(curso.NomeCurso) &&
                                curso.NomeCurso.Contains(Model.NomeFiltro, StringComparison.OrdinalIgnoreCase);

        // Use classes CSS do Bootstrap para controlar a visibilidade
        <tr class="@((cursoContemLetra) ? "" : "d-none")">
            <td>@curso.NomeCurso</td>
            <td>@curso.Descricao</td>
            <td>@curso.DataInicio</td>
            <td>@curso.DataTermino</td>
            <td>
                <a asp-page="./Editar" asp-route-id="@curso.CursoId">Alterar</a>
                <a asp-page="./Visualizar" asp-route-id="@curso.CursoId">Detalhes</a>
                <a asp-page="./Delete" asp-route-id="@curso.CursoId">Deletar</a>
            </td>
        </tr>
    }
}
else
{
    <tr>
        <td colspan="5">Nenhum curso cadastrado.</td>
    </tr>
}

    </tbody>
</table>
